/*
 *	RISC-V Instruction Set
 *
 *	This file is part of GLISS
 *	Copyright (c) 2017, IRIT UPS.
 *
 *	GLISS is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	GLISS is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with GLISS; if not, write to the Free Software
 *	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

// Floating Point Operations
op all_floating =
	| fld
	| fsd
	| fmadd_d
	| fmsub_d
	| fnmsub_d
	| fnmadd_d
	| fadd_d
	| fsub_d
	| fmul_d
	| fdiv_d
	| fsqrt_d
	| fsgnj_d 
	| fsgnjn_d 
	| fsgnjx_d 	
	| fmin_d
	| fmax_d
	| fcvt_s_d
	| fcvt_d_s
	| feq_d	
	| flt_d
	| fle_d
	| fclass_d
	| fcvt_w_d
	| fcvt_wu_d
	| fcvt_d_w
	| fcvt_d_wu

// 9.3 Double-Precision Load and Store Instructions
// ------------------------------------------------
op fld(offset: int(12), base: reg_t, dest: freg_t)
	syntax = format("fld %s, %d(%s)", dest, offset, base)
	image = format("%12b %s 011 %s 0000111", offset, base, dest)
	action = {	
		// empty, no simulation
	}

op fsd(offset: int(12), src: freg_t, base: reg_t)
	syntax = format("fsd %s, %d(%s)", src, offset, base)
	image = format("%7b %s %s 011 %5b 0100111", offset<11..5>, src, base, offset<4..0>)
	action = {	
		// empty, no simulation
	}


// 9.4 Double-Precision Floating-Point Computational Instructions
// --------------------------------------------------------------

op fadd_d(src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fadd.d %s, %s, %s", dest, src1, src2)
	image = format("0000001 %s %s %3b %s 1010011", src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}
op fsub_d(src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fsub.d %s, %s, %s", dest, src1, src2)
	image = format("0000101 %s %s %3b %s 1010011", src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}

op fmul_d(src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fmul.d %s, %s, %s", dest, src1, src2)
	image = format("0001001 %s %s %3b %s 1010011", src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}

op fdiv_d(src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fdiv.d %s, %s, %s", dest, src1, src2)
	image = format("0001101 %s %s %3b %s 1010011", src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}
	

op fmin_d(src2: freg_t, src1: freg_t, dest: freg_t)
	syntax = format("fmin.d %s, %s, %s", dest, src1, src2)  
	image = format("0010101 %s %s 000 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}

op fmax_d(src2: freg_t, src1: freg_t, dest: freg_t)
	syntax = format("fmax.d %s, %s, %s", dest, src1, src2)
	image = format("0010101 %s %s 001 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}
	
op fsqrt_d(src: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fsqrt.d %s, %s", dest, src)
	image = format("0101101 00000 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}

	// fused multiply add/sub
op fmadd_d(src3: freg_t, src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fmadd.d %s, %s, %s, %s", dest, src1, src2, src3)
	image = format("%s 01 %s %s %3b %s 1000011", src3, src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}

op fmsub_d(src3: freg_t, src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fmsub.d %s, %s, %s, %s", dest, src1, src2, src3)
	image = format("%s 01 %s %s %3b %s 1000111", src3, src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}

op fnmadd_d(src3: freg_t, src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fnmadd.d %s, %s, %s, %s", dest, src1, src2, src3)
	image = format("%s 01 %s %s %3b %s 1001111", src3, src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}

op fnmsub_d(src3: freg_t, src2: freg_t, src1: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fnmsub.d %s, %s, %s, %s", dest, src1, src2, src3)
	image = format("%s 01 %s %s %3b %s 1001011", src3, src2, src1, rm, dest)
	action = {	
		// empty, no simulation
	}


// 9.5 Double-Precision Floating-Point Conversion and Move Instructions
// --------------------------------------------------------------------

op fsgnj_d(src2: freg_t, src1: freg_t,  dest: freg_t)
	syntax = format("fsgnj.d %s, %s, %s", dest, src1, src2) 
	image = format("0010001 %s %s 000 %s 1010011", src2, src1,  dest)
	action = {	
		// empty, no simulation
	}
	
	
op fsgnjn_d(src2: freg_t, src1: freg_t,  dest: freg_t)
	syntax = format("fsgnjn.d %s, %s, %s", dest, src1, src2)
	image = format("0010001 %s %s 001 %s 1010011", src2, src1,  dest)
	action = {	
		// empty, no simulation
	}
		
op fsgnjx_d(src2: freg_t, src1: freg_t, fsgnj_type: card(3), dest: freg_t)
	syntax = format("fsgnjx.d %s, %s, %s", dest, src1, src2)
	image = format("0010001 %s %s 010 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}

op fcvt_s_d(src: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fcvt.s.d %s, %s", dest, src) 
	image = format("0100000 00001 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}
	
op fcvt_d_s( src: freg_t, rm: card(3), dest: freg_t)
	syntax = format("fcvt.d.s %s, %s", dest, src)
	image = format("0100001 00000 %s %3b %s 1010011", fcvt_type, src, rm, dest)
	action = {	
		// empty, no simulation
	}

op fcvt_w_d(src: freg_t, rm: card(3), dest: reg_t)
	syntax =  format("fcvt.w.d %s, %s", dest, src) 
	image = format("1100001 00000 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}

op fcvt_wu_d(src: freg_t, rm: card(3), dest: reg_t)
	syntax = format("fcvt.wu.d %s, %s", dest, src)
	image = format("1100001 00001 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}

op fcvt_d_w(src: reg_t, rm: card(3), dest: freg_t)
	syntax =  format("fcvt.d.w %s, %s", dest, src) 
	image = format("1101001 00000 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}
	
	op fcvt_d_wu(src: reg_t, rm: card(3), dest: freg_t)
	syntax = format("fcvt.d.wu %s, %s", dest, src)
	image  = format("1101001 00001 %s %3b %s 1010011", src, rm, dest)
	action = {	
		// empty, no simulation
	}

// 9.6 Double-Precision Floating-Point Compare Instructions
// ----------------------------------------------------
op fle_d(src2: freg_t, src1: freg_t, dest: reg_t)
	syntax = format("fle.d %s, %s, %s", dest, src1, src2) 
	image = format("1010001 %s %s 000 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}

op flt_d(src2: freg_t, src1: freg_t, dest: reg_t)
	syntax = format("flt.d %s, %s, %s", dest, src1, src2)
	image = format("1010001 %s %s 001 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}
	
op feq_d(src2: freg_t, src1: freg_t, dest: reg_t)
	syntax = format("feq.d %s, %s, %s", dest, src1, src2)
	image = format("1010001 %s %s 010 %s 1010011", src2, src1, dest)
	action = {	
		// empty, no simulation
	}

// 9.7 Double-Precision Floating-Point Classify Instruction 
// --------------------------------------------------------
op fclass_d(src: freg_t, dest: reg_t)
	syntax = format("fclass.d %s, %s", dest, src)
	image = format("1110001 00000 %s 001 %s 1010011", src, dest)
	action = {	
		// empty, no simulation
	}


